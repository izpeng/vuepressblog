(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{563:function(a,t,s){"use strict";s.r(t);var e=s(2),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("hr"),a._v(" "),s("h2",{attrs:{id:"title-dubbodate-2020-03-28-16-00-47tags-dubbo-java-categories-后端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#title-dubbodate-2020-03-28-16-00-47tags-dubbo-java-categories-后端"}},[a._v("#")]),a._v(' title: Dubbo\ndate: 2020-03-28 16:00:47\ntags: ["Dubbo","java"]\ncategories: 后端')]),a._v(" "),s("h1",{attrs:{id:"dubbo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dubbo"}},[a._v("#")]),a._v(" Dubbo")]),a._v(" "),s("h2",{attrs:{id:"_1-1-soa思想"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-soa思想"}},[a._v("#")]),a._v(" 1.1 SOA思想")]),a._v(" "),s("h3",{attrs:{id:"_1-1-1-soa介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-soa介绍"}},[a._v("#")]),a._v(" 1.1.1 SOA介绍")]),a._v(" "),s("p",[s("strong",[a._v("SOA")]),a._v(" （面向服务的架构）"),s("br"),a._v("\n  面向服务的架构（SOA）是一个组件模型，它将应用程序的不同功能单元（称为服务）进行拆分，并通过这些服务之间定义良好的接口和协议联系起来。接口是采用中立的方式进行定义的，它应该独立于实现服务的硬件平台、操作系统和编程语言。这使得构件在各种各样的系统中的服务可以以一种统一和通用的方式进行交互。")]),a._v(" "),s("hr"),a._v(" "),s("p",[s("img",{attrs:{src:"http://www.zhangpeng.fun/upload/2019/12/image-ae856a7313ea47bd8f74c64d9fa6222a.png",alt:"image.png"}})]),a._v(" "),s("h2",{attrs:{id:"_1-2-rpc协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-rpc协议"}},[a._v("#")]),a._v(" 1.2 RPC协议")]),a._v(" "),s("h3",{attrs:{id:"_1-2-1-rpc介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-rpc介绍"}},[a._v("#")]),a._v(" 1.2.1 RPC介绍")]),a._v(" "),s("p",[a._v("RPC是远程过程调用（Remote Procedure Call）的缩写形式。SAP系统RPC调用的原理其实很简单，有一些类似于三层构架的C/S系统，第三方的客户程序通过接口调用SAP内部的标准或自定义函数，获得函数返回的数据进行处理后显示或打印。"),s("br"),a._v("\n  RPC:实现系统之间的通信,用户不需要了解底层原理.")]),a._v(" "),s("h3",{attrs:{id:"_1-1-2-rpc与http区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-rpc与http区别"}},[a._v("#")]),a._v(" 1.1.2 RPC与HTTP区别")]),a._v(" "),s("p",[a._v("网络7层协议如图所示.")]),a._v(" "),s("hr"),a._v(" "),s("p",[s("img",{attrs:{src:"http://www.zhangpeng.fun/upload/2019/12/image-f5538a7b128f47afba3045baa6e87bf5.png",alt:"image.png"}})]),a._v(" "),s("p",[a._v("层级关系与对应的协议.")]),a._v(" "),s("hr"),a._v(" "),s("p",[s("img",{attrs:{src:"http://www.zhangpeng.fun/upload/2019/12/image-c655388dc2494930aa4790fbba69eee7.png",alt:"image.png"}})]),a._v(" "),s("p",[a._v("区别:"),s("br"),a._v("\n  1.RPC是传输层协议(4层).而HTTP协议是应用层协议(7层)."),s("br"),a._v("\n  2.RPC协议可以直接调用中立接口,HTTP协议不可以."),s("br"),a._v("\n  3.RPC通信协议是长链接,HTTP协议一般采用短连接需要3次握手(可以配置长链接添加请求头Keep-Alive: timeout=20).(长连接，指在一个连接上可以连续发送多个数据包，在连接保持期间，如果没有数据包发送，需要双方发链路检测包。)"),s("br"),a._v("\n  4.RPC协议传递数据是加密压缩传输.HTTP协议需要传递大量的请求头信息."),s("br"),a._v("\n  5.RPC协议一般都有注册中心.有丰富的监控机制."),s("br")]),a._v(" "),s("h2",{attrs:{id:"_1-3-dubbo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-dubbo"}},[a._v("#")]),a._v(" 1.3 Dubbo")]),a._v(" "),s("h3",{attrs:{id:"_1-3-1-dubbo介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-1-dubbo介绍"}},[a._v("#")]),a._v(" 1.3.1 Dubbo介绍")]),a._v(" "),s("p",[a._v("Apache Dubbo |ˈdʌbəʊ| 是一款高性能、轻量级的开源Java RPC框架，它提供了三大核心能力：面向接口的远程方法调用，智能容错和负载均衡，以及服务自动注册和发现。\n   Dubbo(读音[ˈdʌbəʊ])是阿里巴巴公司开源的一个高性能优秀的服务框架，使得应用可通过高性能的 RPC 实现服务的输出和输入功能，可以和 [1]  Spring框架无缝集成。\n"),s("a",{attrs:{href:"http://dubbo.apache.org/en-us/",title:"http://dubbo.apache.org/en-us/",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://dubbo.apache.org/en-us/"),s("OutboundLink")],1)]),a._v(" "),s("h3",{attrs:{id:"_1-3-2-dubbo调用原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-2-dubbo调用原理"}},[a._v("#")]),a._v(" 1.3.2 Dubbo调用原理")]),a._v(" "),s("hr"),a._v(" "),s("p",[s("img",{attrs:{src:"http://www.zhangpeng.fun/upload/2019/12/image-6c7a6b6179be4349b18d174583961183.png",alt:"image.png"}})]),a._v(" "),s("hr"),a._v(" "),s("p",[s("img",{attrs:{src:"http://www.zhangpeng.fun/upload/2019/12/image-88b29022ac3148cf8390805f527708e0.png",alt:"image.png"}})]),a._v(" "),s("h2",{attrs:{id:"_1-4-dubbo负载均衡算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-dubbo负载均衡算法"}},[a._v("#")]),a._v(" 1.4 Dubbo负载均衡算法")]),a._v(" "),s("h3",{attrs:{id:"_1-4-1-nginx负载均衡机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-1-nginx负载均衡机制"}},[a._v("#")]),a._v(" 1.4.1 Nginx负载均衡机制")]),a._v(" "),s("p",[a._v("说明:nginx是服务端负载均衡,所有的请求都会由nginx实现负载.")]),a._v(" "),s("hr"),a._v(" "),s("p",[s("img",{attrs:{src:"http://www.zhangpeng.fun/upload/2019/12/image-925dac6ef8b3409db365d2480b0cb6a6.png",alt:"image.png"}})]),a._v(" "),s("h3",{attrs:{id:"_1-4-2-dubbo的负载均衡模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-2-dubbo的负载均衡模式"}},[a._v("#")]),a._v(" 1.4.2 Dubbo的负载均衡模式")]),a._v(" "),s("p",[a._v("dubbo采用客户端负载均衡机制,并且是正向代理.")]),a._v(" "),s("hr"),a._v(" "),s("p",[s("img",{attrs:{src:"http://www.zhangpeng.fun/upload/2019/12/image-0573b98f88c2453f8ece46a0e497d2f0.png",alt:"image.png"}})]),a._v(" "),s("p",[a._v("1.6.3\t随机机制\n说明:dubbo默认采用的负载均衡算法为随机.")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Reference")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("timeout"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("check"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\t\t\tloadbalance "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"random"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("UserService")]),a._v(" userService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("1.6.4\t轮循算法")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Reference")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("timeout"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("check"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\t\t\tloadbalance "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"roundrobin"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("UserService")]),a._v(" userService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("1.6.5\tIPHASH算法\n说明:根据IP绑定服务器.")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Reference")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("timeout"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("check"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\t\t\tloadbalance "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"consistenthash"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("UserService")]),a._v(" userService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("1.6.6\t最小访问量机制\n说明:根据当前服务器的最小访问量实现负载均衡.(压力小先访问)")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Reference")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("timeout"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("check"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\t\t\tloadbalance "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"leastactive"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("UserService")]),a._v(" userService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);