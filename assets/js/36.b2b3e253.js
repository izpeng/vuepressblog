(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{572:function(e,a,s){"use strict";s.r(a);var n=s(2),t=Object(n.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("hr"),e._v(" "),s("p",[e._v("一、创建建数据库、创建建数据表、查看数据库、查看数据表")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("-- 01.查看mysql服务器中所有数据库")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("show databases;\n")])])]),s("p",[e._v("-- 02.进入某一数据库（进入数据库后，才能操作库中的表和表记录）")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("use test;\n")])])]),s("p",[e._v("-- 查看已进入的库")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select database();\n")])])]),s("p",[e._v("-- 03.查看当前数据库中的所有表")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("show tables;\n")])])]),s("p",[e._v("-- 04.删除mydb1库")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("-- 语法：drop database 库名;\ndrop database  mydb1;\n-- 思考：当删除的表不存在时，如何避免错误产生?\ndrop database if exists mydb1;\n")])])]),s("p",[e._v("-- 05.重新创建mydb1库，指定编码为utf8")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("-- 语法：create database 库名 charset 编码;\ncreate database mydb1 charset utf8;\n\n-- 如果不存在则创建mydb1;\ncreate database mydb1 if not exists charset utf8; \n")])])]),s("p",[e._v("-- 06.查看建库时的语句（并验证数据库库使用的编码）")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("-- 语法：show create database 库名;\nshow create database mydb1;\n")])])]),s("p",[e._v("-- 07.进入mydb1库，删除stu学生表(如果存在)")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("-- 语法：drop table 表名;\nuse mydb1\ndrop table stu;\ndrop table if exists stu;\n")])])]),s("p",[e._v("-- 08.创建stu学生表（编号[数值类型]、姓名、性别、出生年月、考试成绩[浮点型]）")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("/* 建表的语法：\ncreate table 表名(\n\t列名 数据类型,\n\t列名 数据类型,\n\t...\n); */\n")])])]),s("hr"),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("create table if not exists stu(\n\tid int primary key auto_increment,\n\tname varchar(20),\n\tgenger varchar(10),\n\tbirthday date,\n\tscore double\n);\n")])])]),s("p",[e._v("-- 09.查看stu学生表结构")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("show create table stu;\ndesc stu;\n")])])]),s("hr"),e._v(" "),s("p",[e._v("二、新增、修改、删除表记录 **********")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("-- 10.往学生表(stu)中插入记录(数据)")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("-- 插入记录：insert into 表名(列1，列2，列3...) values(值1，值2，值3...);\ninsert into stu(id,name,genger,birthday,score) \tvalues(null,'赵伟成','女','2018-3-9',33);\n\ninsert into stu values(null,'赵伟成','女','2018-3-9',33);\ninsert into stu values(null,'张三','男','2018-3-9',11);\ninsert into stu values(null,'卫程','女','2022-1-11',55);\n/* 提示：\n 设置编码：set names gbk;\n 查看MySQL数据库使用的编码：show variables like 'char%';\n mysql --default-character-set=gbk -uroot -proot */\n")])])]),s("p",[e._v("-- 11.查询stu表所有学生的信息")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select * from stu;\nselect id,name from stu;\n")])])]),s("p",[e._v("-- 12.修改stu表中所有学生的成绩，加10分特长分")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("-- 修改语法: update 表名 set 列=值,列=值,列=值...;\nupdate stu set score=score+10;\n")])])]),s("p",[e._v("-- 13.修改stu表中王海涛的成绩，将成绩改为88分。\\c取消当前语句的执行")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("update stu set score=88\nwhere name = '卫程';\n\n/* 提示：where子句用于对记录进行筛选过滤，\n   保留符合条件的记录，将不符合条件的记录剔除。*/\n")])])]),s("p",[e._v("-- 14.删除stu表中所有的记录")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("-- 删除记录语法: delete from 表名 [where条件] \ndelete from stu;\n\n-- 仅删除符合条件的\ndelete from stu where id= 1;\n")])])]),s("hr"),e._v(" "),s("p",[e._v("三、基础查询、where子句查询")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("-- 准备数据： 以下练习将使用db10库中的表及表记录，请先进入db10数据库!!!\n-- 准备数据： 以下练习将使用db10库中的表及表记录，请先进入db10数据库!!!")]),e._v(" "),s("p",[e._v("-- ******** 基础查询 ********\n-- 15.查询emp表中的所有员工，显示姓名，薪资，奖金")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("use db10;\nselect name,sal,bonus  \nfrom emp;\n")])])]),s("p",[e._v("-- 16.查询emp表中的所有员工，显示所有列")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select * from emp;\n/* 使用 *（星号）的缺点：把不必要的列也查询出来了，而且效率不如直接指定列名 */\n")])])]),s("p",[e._v("-- 17.查询emp表中的所有部门和职位")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select dept,job \nfrom emp;\n\n/* 思考：如果查询的结果中，存在大量重复的记录，如何剔除重复记录，只保留一条？ */\n\n-- distinct 用于剔除重复的记录\nselect distinct dept,job from emp;\n")])])]),s("p",[e._v("-- ******** WHERE子句查询 ********\n-- 18.查询emp表中薪资大于3000的所有员工，显示员工姓名、薪资")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select name,sal from emp\nwhere sal>3000;\n")])])]),s("p",[e._v("-- 19.查询emp表中总薪资(薪资+奖金)大于3500的所有员工，显示员工姓名、总薪资")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select name,sal+ifnull(bonus,0) from emp\nwhere sal+ifnull(bonus,0)>3500;\n-- ifnull(列, 值)函数: 判断指定的列是否包含null值, 如果有null值, 用第二个值替换null值\n")])])]),s("p",[e._v("select name,sal+ifnull(bonus,0) from emp")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v('where sal+ifnull(bonus,0)>3500;\n-- 注意查看上面查询结果中的表头，如何将表头中的 sal+bonus 修改为 "总薪资"，as可省略\n')])])]),s("p",[e._v("select name  姓名,sal+ifnull(bonus,0) as 总薪资 from emp")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("where sal+ifnull(bonus,0)>3500;\n\n-- 试一试：where中能使用定义好的别名吗?\n不能\n")])])]),s("p",[e._v("-- 20.查询emp表中薪资在3000和4500之间的员工，显示员工姓名和薪资")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select name,sal from emp\nwhere sal>=3000&&sal<=4500;\n-- 提示: between...and... 在...之间\nselect name,sal from emp\nwhere sal between 3200 and 4500;\n")])])]),s("p",[e._v("-- 21.查询emp表中薪资为 1400、1600、1800的员工，显示员工姓名和薪资\nselect name,sal")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("from emp\nwhere sal=1400 or sal=1600 or sal=1800;\n-- 或者\nselect name,sal\nfrom emp\nwhere sal in(1400,1600,1800);\n")])])]),s("p",[e._v("-- 22.查询薪资不为1400、1600、1800的员工")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select name,sal\nfrom emp\nwhere not (sal=1400 or sal=1600 or sal=1800);\n-- 或者\nselect name,sal\nfrom emp\nwhere sal!=1400 and sal!=1600 and sal!=1800;\n-- 或者\nselect name,sal\nfrom emp\nwhere sal not in(1400,1600,1800);\n")])])]),s("p",[e._v("-- 23.查询emp表中薪资大于4000和薪资小于2000的员工，显示员工姓名、薪资。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select name,sal\nfrom emp\nwhere sal>4000 or sal<2000;\n")])])]),s("p",[e._v("-- 24.查询emp表中薪资大于3000并且奖金小于600的员工，显示员工姓名、薪资、奖金。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select name,sal,bonus\nfrom emp\nwhere sal>3000 and bonus<600;\n-- 处理null值\nselect name,sal,bonus\nfrom emp\nwhere sal>3000 and ifnull(bonus,0)<600;\n-- 处理null值\n")])])]),s("p",[e._v("-- 25.查询没有部门的员工（即部门列为null值）")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select * from emp\nwhere dept is null;\n-- 思考：如何查询有部门的员工（即部门列不为null值）\nselect * from emp\nwhere dept is not null;\n-- 思考：如何查询有部门的员工（即部门列不为null值）\n")])])]),s("p",[e._v('-- ******** Like模糊查询 ********\n-- 26.查询emp表中姓名中以"刘"开头的员工，显示员工姓名。')]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select name from emp\nwhere name like'刘%';\n\n/* like进行模糊查询，\"%\" 表示通配，表示0或多个字符。\n\"_\"表示一个任意的字符 */\nselect name from emp\nwhere name like'刘_';\n")])])]),s("p",[e._v('-- 27.查询emp表中姓名中包含"涛"员工，显示员工姓名。\\')]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select name from emp\nwhere name like'%涛%';\n")])])]),s("p",[e._v('-- 28.查询emp表中姓名以"刘"开头并且姓名为2个字的员工，显示员工姓名。')]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select name from emp\nwhere name like'刘_';\n")])])]),s("hr"),e._v(" "),s("p",[e._v("-- 三、分组查询、聚合函数、排序查询")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("-- 29.对emp表按照部门对员工进行分组，查看分组后效果")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("/* 分组的语法: \nselect 查询的列 from 表名 group by 列名\n根据指定的列进行分组 */\nselect * from emp \ngroup by dept;\n")])])]),s("p",[e._v("-- 30.对emp表按照职位进行分组, 并统计每个职位的人数, 显示职位和对应人数")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select count(id) 人数,job 职位 \nfrom emp \ngroup by job;\n")])])]),s("p",[e._v("-- 31.对emp表按照部门进行分组, 求每个部门的最高薪资(不包含奖金)，显示部门名称和最高薪资 max() min(),")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select dept 部门,max(sal) 最高薪资\nfrom emp\ngroup by dept;\n")])])]),s("p",[e._v("-- 32.统计emp表中薪资大于3000的员工个数（- count(column)统计某列的行数）")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select count(*) from emp\nwhere sal>3000;\n")])])]),s("p",[e._v("-- 33.统计emp表中所有员工的薪资总和(不包含奖金)（- sum(column)对某列的值求和）")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select sum(sal) from emp ;\n")])])]),s("p",[e._v("-- 34.统计emp表员工的平均薪资(不包含奖金)（- avg(column)对某列的值求平均值）")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select avg(sal) from emp ;\n")])])]),s("p",[e._v("-- 35.查询emp表中所有在1993和1995年之间出生的员工，显示姓名、出生日期。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select name,birthday \nfrom emp\nwhere birthday between '1993-01-01' and '1995-12-31';\n\n-- 或者 year(),month(),day(),\nselect name,birthday \nfrom emp\nwhere year(birthday) between 1993 and 1995;\n")])])]),s("p",[e._v("-- 36.查询本月过生日的所有员工")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select * from emp\nwhere month(curdate())= month(birthday);\n/* \ncurdate() 获取当前日期 年月日\nselect curdate();\ncurtime() 获取当前时间 时分秒\nselect curtime();\nsysdate() 获取当前日期+时间 年月日 时分秒 \nselect sysdate();\nselect now();\n*/\n")])])]),s("hr"),e._v(" "),s("p",[e._v("-- **************** 排序查询 ***************")]),e._v(" "),s("hr"),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("/* order by 排序的列 asc 升序(从低到高)\norder by 排序的列 desc 降序(从高到低)\n默认就是升序，所以asc可以省略不写 */\n")])])]),s("p",[e._v("-- 37.对emp表中所有员工的薪资进行升序(从低到高)排序，显示员工姓名、薪资。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select name,sal from emp\norder by sal;\n")])])]),s("p",[e._v("-- 38.对emp表中所有员工奖金进行降序(从高到低)排序，显示员工姓名、奖金。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select name,bonus from emp\norder by bonus desc;\n")])])]),s("hr"),e._v(" "),s("p",[e._v("-- **************** 分页查询 ***************")]),e._v(" "),s("hr"),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("/* 在mysql中，通过limit进行分页查询：\nlimit (页码-1)*每页显示记录数, 每页显示记录数 */\n")])])]),s("p",[e._v("-- 39.查询emp表中的所有记录，分页显示：每页显示3条记录，返回第 1 页。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select * from emp\nlimit 0,3;\nselect * from emp\nlimit 6,3;\n")])])]),s("p",[e._v("-- 40.查询emp表中的所有记录，分页显示：每页显示3条记录，返回第 2 页。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select * from emp\nlimit 3,3;\n\nselect * from emp\nlimit 9,3;\n")])])]),s("hr"),e._v(" "),s("p",[e._v("-- 三、外键")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("-- 准备数据： 以下练习将使用db20库中的表及表记录，请先进入db20数据库!!!\n-- 准备数据： 以下练习将使用db20库中的表及表记录，请先进入db20数据库!!!\n-- 41.尝试删除dept表中的某一个部门")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("/* 上面的部门删除成功后，员工表里的某些员工就没有了对应的部门,\n这种我们称之为数据的完整性被破坏了,\n为了避免这种情况，可以在删除之前，查看将要删除的部门下是否还有员工存在，如果有就不要删除;\n或者，让数据库帮我们去维护这样的对应关系，也就是当将要被删除的部门下如果还有员工，\n就阻止删除操作，让数据库帮我们维护这样的对应关系，就需要指定外键。*/\n")])])]),s("p",[e._v("-- 42.重新创建db20中的dept和emp表，在创建时，指定emp表中的dept_id列为外键，即这一列要严格参考dept表中的id列, 再次尝试删除dept表中的某一个部门，查看是否能删除成功")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("-- 四、关联查询、外连接查询")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("-- 准备数据： 以下练习将使用db30库中的表及表记录，请先进入db30数据库!!!\n-- 准备数据： 以下练习将使用db30库中的表及表记录，请先进入db30数据库!!!")]),e._v(" "),s("p",[e._v("-- 43.查询部门和部门对应的员工信息")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select * from emp,dept\nwhere dept.id = emp.dept_id;\n--\nselect * from dept inner join emp\non dept.id = emp.dept_id;\n")])])]),s("p",[e._v("-- 44.查询所有部门和部门下的员工，如果部门下没有员工，员工显示为null")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select * from dept left join emp\non dept.id = emp.dept_id;\n")])])]),s("p",[e._v("-- 45.查询部门和所有员工，如果员工没有所属部门，部门显示为null")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select * from dept right join emp\non dept.id = emp.dept_id;\n")])])]),s("hr"),e._v(" "),s("p",[e._v("-- 五、子查询、多表查询")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("-- 准备数据：以下练习将使用db40库中的表及表记录，请先进入db40数据库!!!\n-- 准备数据：以下练习将使用db40库中的表及表记录，请先进入db40数据库!!!")]),e._v(" "),s("p",[e._v("-- 46.列出薪资比'王海涛'薪资高的所有员工，显示姓名、薪资")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select name,sal from emp\nwhere sal>(\nselect sal from emp\nwhere name= '王海涛'\n);\n")])])]),s("p",[e._v("-- 47.列出与'刘沛霞'从事相同职位的所有员工，显示姓名、职位。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select name,job from emp\nwhere job = (\nselect job from emp\nwhere name = '刘沛霞'\n);\n")])])]),s("p",[e._v("-- 48.列出薪资比'大数据部'部门(已知部门编号为30)所有员工薪资都高的员工信息，显示员工姓名、薪资和部门名称。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select emp.name,sal,dept.name \nfrom emp,dept\nwhere emp.dept_id = dept.id and sal>(\n    select max(sal) from emp,dept\n    where dept_id = 30 and emp.dept_id = dept.id\n);\n\nselect emp.name,sal,dept.name \nfrom emp left join dept\non emp.dept_id = dept.id and \nwhere sal>(\n    select max(sal) from emp\n    where dept_id = 30 \n);\n")])])]),s("p",[e._v("-- 49.列出在'培优部'任职的员工，假定不知道'培优部'的部门编号， 显示部门名称，员工名称。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("-- 关联查询两张表\n-- 求出在培优部的员工\nselect dept.name,emp.name \nfrom emp,dept\nwhere emp.dept_id = dept.id and \n   dept.name = '培优部';\n")])])]),s("p",[e._v("-- 50.(自查询)列出所有员工及其直接上级，显示员工姓名、上级编号，上级姓名")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select e1.name,e2.topid,e2.name \nfrom emp as e1,emp e2\nwhere e1.topid = e2.id;\n")])])]),s("p",[e._v("-- 51.列出最低薪资大于1500的各种职位，显示职位和该职位最低薪资")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select job, min(sal)\nfrom emp\ngroup by job\nhaving min(sal)>1500;\n")])])]),s("p",[e._v("-- 52.列出在每个部门就职的员工数量、平均工资。显示部门编号、员工数量，平均薪资。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select dept_id,count(*),avg(sal)\nfrom emp\ngroup by dept_id;\n")])])]),s("p",[e._v("-- 53.查出至少有一个员工的部门。显示部门编号、部门名称、部门位置、部门人数。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("-- 关联查询两张表(dept, emp)\n-- 替换要显示的列和统计部门人数\nselect dept.id,dept.name,dept.loc,count(*)\nfrom emp,dept\nwhere emp.dept_id = dept.id \ngroup by dept.name;\n")])])]),s("p",[e._v("-- 54.列出受雇日期早于直接上级的所有员工的编号、姓名、部门名称。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("/* \n列: e1.id, e1.name, d.name\n表:\temp e1: 员工表\n\temp e2: 上级表\n\tdept d: 部门表\n关联条件: e1.topid=e2.id\n\t\te1.dept_id=d.id\n\t\te1.hdate<e2.hdate  */\nselect e1.id, e1.name, d.name\nfrom emp e1,emp e2,dept d\nwhere e1.topid=e2.id and e1.dept_id=d.id\n\tand e1.hdate<e2.hdate;\n")])])]),s("p",[e._v("-- 55.列出每个部门薪资最高的员工信息，显示部门编号、员工姓名、薪资")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("-- 查询emp表中所有员工的部门编号、姓名、薪资\n-- 查询emp表中每个部门的最高薪资，显示部门编号、最高薪资\n-- 第二次查询的结果作为一张临时表和第一次查询进行关联查询\n\nselect emp.dept_id, t1.ms,emp.name\nfrom emp,(\n\tselect dept_id, max(sal) ms \n\tfrom emp \n\tgroup by dept_id) t1\nwhere emp.dept_id = t1.dept_id and t1.ms=emp.sal;\n")])])]),s("p",[e._v("======================================\n补充1、笛卡尔积查询：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("笛卡尔积查询：如果同时查询两张表，左边表有m条数据，右边表有n条数据，那么笛卡尔积查询是结果就是 m*n 条记录。这就是笛卡尔积查询。例如： \nselect * from dept,emp;\n上面的查询中包含大量错误的数据, 一般不使用这种查询。\n\n如果只想保留正确的记录，可以通过where条件进行筛选，将符合条件的保留下来，不符合条件的自然就会被剔除，例如：\nselect * from dept,emp\nwhere dept.id=emp.dept_id;\n")])])]),s("p",[e._v("补充2、左外连接和右外连接查询：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("(1) 左外连接查询：是将左边表中所有数据都查询出来, 如果在右边表中没有对应的记录, 右边表显示为null即可。\n(2) 右外连接查询：是将右边表中所有数据都查询出来, 如果在左边表中没有对应的记录, 左边表显示为null即可。\n")])])]),s("p",[e._v("补充3、where和having都用于筛选过滤，但是：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("(1) where用于在分组之前进行筛选, having用于在分组之后进行筛选\n(2) 并且where中不能使用列别名, having中可以使用别名\n(3) where子句中不能使用列别名(可以使用表别名), 因为where子句比select先执行!!\n")])])]),s("p",[e._v("补充4、SQL语句的书写顺序和执行顺序:\nSQL语句的书写顺序：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("select...\nfrom...\nwhere...\ngroup by...\norder by...\n...\n")])])]),s("p",[e._v("SQL语句的执行顺序：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("from... -- 确定要查询的是哪张表 (定义表别名)\nwhere... -- 从整张表的数据中进行筛选过滤\nselect... -- 确定要显示哪些列 (定义列别名)\ngroup by... -- 根据指定的列进行分组\norder by... -- 根据指定的列进行排序\n...\n")])])]),s("p",[e._v("======================================")])])}),[],!1,null,null,null);a.default=t.exports}}]);